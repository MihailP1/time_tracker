{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","userName","form","numberOfTasks","tasks","saveData","bind","changeSavedTask","deleteTask","changeForm","setUser","setForm","getSavedTasks","setSavedTasks","createTasks","name","this","setState","undefined","i","prevState","time","fetch","method","headers","body","JSON","stringify","then","res","json","arr","length","taskNumber","taskData","taskName","sort","e","target","value","className","mainState","React","Component","RegistrationForm","username","email","psw","pswRepeat","regHandle","handleInputChange","preventDefault","regData","for","type","placeholder","onChange","required","href","onClick","LoginForm","logHandle","logData","text","LogedUser","window","location","reload","logout","Timer","timer","isToggleOn","handleClick","handleChange","resetTime","stopTime","clearTask","clearTime","setSavedTask","event","clearInterval","timerID","setInterval","tick","click","change","Task","toggle","readOnly","Time","millis","ms","String","Math","floor","substr","sec","hrs","min","substring","msToTime","ButtonOn","ButtonClear","ButtonSave","save","TaskSelect","ContinueSelect","continueSelect","children","showTasksSelect","Fragment","TasksList","clickTask","id","taskArr","push","createTaskArr","SavedTasks","savedTasks","taskNum","SavedTask","object","task","taskTime","taskExist","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.621a18be.chunk.js","sourcesContent":["\nimport React from 'react';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      userName: \"\",\n      form: \"\",\n      numberOfTasks: 20,\n      tasks: {}\n    };\n\n    this.saveData = this.saveData.bind(this);\n    this.changeSavedTask = this.changeSavedTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.changeForm = this.changeForm.bind(this);\n    this.setUser = this.setUser.bind(this);\n    this.setForm = this.setForm.bind(this);\n    this.getSavedTasks = this.getSavedTasks.bind(this);\n    this.setSavedTasks = this.setSavedTasks.bind(this);\n    this.createTasks = this.createTasks.bind(this);\n  }\n  setUser(name){\n    this.setState({userName: name});\n    if(this.state.userName != \"\" && this.state.userName != undefined){\n      this.createTasks();\n      this.getSavedTasks();\n    }\n    this.setForm();\n  }\n  componentDidMount(){\n\n    this.createTasks();\n    this.setForm();\n    \n  }\n  createTasks(){\n    for(let i = 1; i <= this.state.numberOfTasks; i++){\n      this.setState((prevState)=>({tasks:{...prevState.tasks,[i]:{name: \"\", time: \"\"}}}));\n    }\n  }\n  getSavedTasks(){\n    const userName = this.state.userName;\n    fetch('/time_tracker/php/savedTasks.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify(userName)\n      })\n        .then(res=>res.json())\n        .then(res=> this.setSavedTasks(res));\n  }\n  setSavedTasks(arr){\n    for(let i = 1; i <= arr.length; i++){\n      this.setState({tasks: {...this.state.tasks, [i]:{name: arr[i-1][0], time: +arr[i-1][1]}}});\n    }\n  }\n  saveData(name, time){\n    for(let i=1; i<=this.state.numberOfTasks; i++){\n      if(this.state.tasks[i].name==\"\" || this.state.tasks[i].name==undefined){\n        this.setState((prevState)=>({tasks:{...prevState.tasks, [i]:{name: name, time:time}}}));\n        break;\n      } else if (this.state.tasks[i].name==name){\n        this.setState((prevState) => ({tasks:{...prevState.tasks, [i]: {name: name, time:time+prevState.tasks[i].time}}}));\n        break;\n      }\n    }\n  }\n  deleteTask(taskNumber){\n    if(this.state.userName!=\"\"){\n      const taskData = {\n        userName: this.state.userName,\n        taskName: this.state.tasks[taskNumber].name\n      }\n      fetch('/time_tracker/php/deleteTask.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify(taskData)\n      });\n    }\n    this.sort(+taskNumber);\n  }\n  sort(taskNumber){\n    for(let i = taskNumber; i<=this.state.numberOfTasks ; i++){\n      \n      if (this.state.tasks[i + 1].name != \"\" && this.state.tasks[i + 1].name != undefined){\n        this.setState((prevState) =>({\n          tasks:{...prevState.tasks, \n            [i]:{\n              name: prevState.tasks[i+1].name,\n              time: prevState.tasks[i+1].time }}}));\n\n      } else if (i == this.state.numberOfTasks || this.state.tasks[i+1].name==\"\" || this.state.tasks[i+1].name==undefined){\n        this.setState((prevState) =>({\n          tasks:{...prevState.tasks, \n            [i]:{\n              name: \"\",\n              time: \"\" }}}));\n        break;\n      }\n\n    }\n  } \n  changeSavedTask(e, taskNumber){\n    this.setState((state)=>({tasks:{...this.state.tasks, [taskNumber]: {name: e.target.value, time: state.tasks[taskNumber].time}}}));\n  }\n  \n  setForm(){\n    if(this.state.userName == \"\" || this.state.userName == undefined){\n      this.setState({form: <RegistrationForm changeForm={this.changeForm}/>})\n    } else {\n      this.setState({form: <LogedUser changeForm={this.changeForm} name={this.state.userName}/>})\n    }\n  }\n  changeForm(e){\n    if(e.target.className == \"registerbtn\"){\n      this.setState({form: <LoginForm changeForm={this.changeForm} setForm={this.setForm} name={this.state.userName} setUser={this.setUser}/>})\n    } else if (e.target.className == \"loginbtn\" || e.target.className == \"logedbtn\"){\n      this.setState({form: <RegistrationForm changeForm={this.changeForm}/>})\n    }\n  }\n  render() {\n  const mainState = this.state;\n  const saveData = this.saveData;\n  const changeSavedTask = this.changeSavedTask;\n  const deleteTask = this.deleteTask;\n  const form = this.state.form;\n  \n  \n    return (\n      \n        <div className=\"app_class row\">\n          <header><h1>Time Tracker</h1></header>\n          <div className = \"main row\">\n            {form}\n            <Timer saveData={saveData} mainState={mainState}/>\n            <SavedTasks mainState={mainState} className=\"saved_tasks\" changeSavedTask={changeSavedTask} deleteTask={deleteTask}/>\n          </div>\n          <footer>\n            <p>Contacts: mihail-pupynin777@yandex.ru</p>\n            <p>Created by: MihailP1</p>\n        \n          </footer>\n        </div>\n      \n    ); \n  }\n}\n\nclass RegistrationForm extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      username: \"\",\n      email: \"\",\n      psw: \"\",\n      pswRepeat: \"\"\n    }\n    this.regHandle = this.regHandle.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n  regHandle(e){\n    e.preventDefault();\n    const regData = this.state;\n    if(this.state.psw == this.state.pswRepeat){\n      fetch('/time_tracker/php/regform.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify(regData)\n      });\n      this.props.changeForm(e);\n    }\n  }\n  \n  handleInputChange(e){\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({[name]: value});\n  }\n  render() {\n    const changeForm = this.props.changeForm;\n    \n    return (\n      <form className=\"reg_form col-xl-4\">\n        <div className=\"container\">\n          <h1>Register</h1>\n          <p>Please fill in this form to create an account.</p>\n          <label for=\"username\"><b>User name</b></label>\n          <input type=\"text\" placeholder=\"Enter user name\" name=\"username\" onChange={this.handleInputChange} className=\"register_input\" required></input>\n          <label for=\"email\"><b>Email</b></label>\n          <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" onChange={this.handleInputChange} className=\"register_input\" required></input>\n          <label for=\"psw\"><b>Password</b></label>\n          <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" onChange={this.handleInputChange} className=\"register_input\" required></input>\n          <label for=\"pswRepeat\"><b>Repeat Password</b></label>\n          <input type=\"password\" placeholder=\"Repeat Password\" name=\"pswRepeat\" onChange={this.handleInputChange} className=\"register_input\" required></input>\n          <p>By creating an account you agree to our <a href=\"#\" className=\"ref\">Terms & Privacy</a>.</p>\n          <button type=\"submit\" className=\"registerbtn\" onClick = {this.regHandle} >Register</button>\n          \n        </div>\n        <div className=\"container signin\">\n          <button type=\"button\" className=\"registerbtn\" onClick = {changeForm}>Sign in</button>\n        </div>\n      </form>  \n           \n    );\n  }\n}\nclass LoginForm extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = { \n      email: \"\",\n      psw: \"\",\n      \n    }\n    this.logHandle = this.logHandle.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  } \n  handleInputChange(e){\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({[name]: value});\n  }\n  logHandle(e){\n    e.preventDefault();\n    const logData = this.state;\n    if(this.state.email !== \"\"  && this.state.psw !== \"\"){\n      fetch('/time_tracker/php/loginform.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify(logData)\n      })\n        .then(res=>res.text())\n        .then(res=>this.props.setUser(res));\n    }\n    \n           \n      \n  }\n  \n  render() {\n    const changeForm = this.props.changeForm;\n    return (\n      <form className=\"reg_form col-xl-4\">\n        <div className=\"container\">\n          <h1>Login</h1>      \n          <label for=\"email\"><b>Email</b></label>\n          <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" onChange={this.handleInputChange} className=\"register_input\" required></input>\n          <label for=\"psw\"><b>Password</b></label>\n          <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" onChange={this.handleInputChange} className=\"register_input\" required></input>\n          <button type=\"submit\" className=\"registerbtn\" onClick = {this.logHandle}>Login</button> \n        </div>\n        <div className=\"container signin\">\n          <button type=\"button\" className=\"loginbtn\" onClick = {changeForm}>Register</button>\n        </div>\n      </form>  \n           \n    );\n  }\n}\nclass LogedUser extends React.Component {\n  \n  logout(){\n    window.location.reload();\n  }\n  render(){\n    \n    return (\n      <div className=\"col-xl-4 loged_username\">\n        <h1>{this.props.name}</h1>\n        <button className=\"logoutbtn\" onClick = {this.logout}>Logout</button>\n      </div>\n    );\n  }\n}\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {taskName: \"\", timer: 0, isToggleOn: false};\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.resetTime = this.resetTime.bind(this);\n    this.stopTime = this.stopTime.bind(this);\n    this.clearTask = this.clearTask.bind(this);\n    this.clearTime = this.clearTime.bind(this);\n    this.setSavedTask = this.setSavedTask.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({taskName: event.target.value});\n  }\n  clearTask(){\n    this.setState({taskName: \"\"});\n  }\n  clearTime(){\n    if(this.state.isToggleOn == false){\n      this.setState({timer: 0});\n    }\n  }\n  tick() { \n    this.setState(prevState=>\n      ({timer: prevState.timer + 100  \n    }));\n  }\n  resetTime(){\n    this.setState({timer: 0});\n  }\n  stopTime(){\n    clearInterval(this.timerID);\n    this.setState({ isToggleOn: false });\n  }\n  handleClick() {\n    if (this.state.isToggleOn === false && this.state.taskName!=0) {\n      this.timerID = setInterval(\n        () => this.tick(),\n        100\n      );\n      \n    } else {\n      \n      clearInterval(this.timerID);\n    }\n    if(this.state.taskName!=0){\n      this.setState(prevState => ({\n        isToggleOn: !prevState.isToggleOn\n      }));\n    }\n    \n    \n  }\n  setSavedTask(name){\n    this.setState({taskName: name});\n  }\n  \n  render() {\n    const taskName = this.state.taskName;\n    const timer = this.state.timer;\n    const isToggleOn = this.state.isToggleOn;\n    const click = this.handleClick;\n    const change = this.handleChange;\n    const resetTime = this.resetTime;\n    const stopTime = this.stopTime;\n    const clearTask = this.clearTask;\n    const clearTime = this.clearTime;\n    const saveData = this.props.saveData;\n    const mainState = this.props.mainState;\n    const setSavedTask = this.setSavedTask;\n    const userName = mainState.userName;\n    return (\n      \n      <div className=\"timer_menu col-xl-4\">\n        <Task timer={timer} taskName={taskName} change={change}/>\n        <Time timer={timer}/>\n        <ButtonOn toggle={isToggleOn} click={click} taskName={taskName}/>\n        <ButtonClear clearTime={clearTime}/>\n        <ButtonSave taskName={taskName} timer={timer} saveData={saveData}\n         resetTime={resetTime} stopTime={stopTime} clearTask={clearTask} userName={userName} mainState={mainState}/>\n        <TaskSelect mainState={mainState} setSavedTask={setSavedTask}/>\n      </div>\n    );\n  }\n}\n\n\nfunction Task(props) {\n  const change = props.change; \n  if (props.timer === 0) {\n    return <h1><input type=\"text\" value={props.taskName} onChange={change} className=\"currentTaskName\" placeholder=\"Name your task\"/></h1>;\n  } else {\n    return <h1><input type=\"text\" value={props.taskName} readOnly className=\"currentTaskName\"/></h1>;\n  }\n  \n}\n\n\nclass Time extends React.Component{\n  \n  render() {\n    function msToTime(millis) {\n      let ms = String(Math.floor(millis%1000)).substr(0, 1);\n      let sec = Math.floor(millis / 1000);\n      let hrs = Math.floor(sec / 3600);\n      sec -= hrs * 3600;\n      let min = Math.floor(sec / 60);\n      sec -= min * 60;\n      if (hrs<0){\n      hrs = \"00\";\n      } else if (hrs<10){\n      hrs = \"0\" + hrs;\n      }\n      sec = '' + sec;\n      sec = ('00' + sec).substring(sec.length); \n      min = '' + min;\n      min = ('00' + min).substring(min.length);\n      return hrs + \":\" + min + \":\" + sec + \":\" + ms;\n       \n    }\n    const time = this.props.timer;\n    return (\n      <h2 className=\"currentTimer\">{msToTime(time)}</h2>\n      );\n  }\n}\n\nclass ButtonOn extends React.Component{\n  \n  render() {\n  const click = this.props.click; \n  const isToggleOn = this.props.toggle;\n  const taskName = this.props.taskName;\n    return (\n      <button onClick={click} className=\"timer_button\">\n        {isToggleOn && taskName? 'Stop' : 'Start'}\n      </button>\n      );\n  }\n}\n\nclass ButtonClear extends React.Component{\n  \n  render() {\n  const clearTime = this.props.clearTime; \n  \n    return (\n      <button onClick={clearTime} className=\"timer_button\">\n        Clear\n      </button>\n      );\n  }\n}\n\nclass ButtonSave extends React.Component{\n  constructor(props){\n    super(props)\n    this.save = this.save.bind(this);\n  }\n  save(){\n    const numberOfTasks = this.props.mainState.numberOfTasks;\n    if(this.props.timer && this.props.mainState.tasks[numberOfTasks].name==\"\"){\n      this.props.saveData(this.props.taskName, this.props.timer)\n      this.props.resetTime();\n      this.props.stopTime();\n      this.props.clearTask();\n      if(this.props.userName!=\"\"){\n        const taskData = {\n          userName: this.props.userName,\n          taskName: this.props.taskName,\n          time: this.props.timer\n        };\n        fetch('/time_tracker/php/saveTask.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: JSON.stringify(taskData)\n        });\n      } else {\n          return null;\n      }\n    } \n  }\n  render() {\n    \n    return (\n      <button onClick={this.save} className=\"timer_button\">\n        Save\n      </button>\n      );\n  }\n}\n\nclass TaskSelect extends React.Component{\n  \n  render() {\n    const mainState = this.props.mainState;\n    const setSavedTask = this.props.setSavedTask;\n    return (\n      \n        <ContinueSelect mainState={mainState}>\n          <TasksList mainState={mainState} setSavedTask={setSavedTask}/>\n        </ContinueSelect>\n      \n      );\n  }\n}\nclass ContinueSelect extends React.Component{\n  \n  render() {\n    const mainState = this.props.mainState;\n    const children = this.props.children;\n    function showTasksSelect(mainState, children){\n      if(mainState.tasks[\"1\"]!=undefined && mainState.tasks[\"1\"].name!=\"\"){\n        return <div className=\"taskSelect\"><div className=\"continue\">Continue task</div> {children}</div>  \n      }\n    }\n    const continueSelect = showTasksSelect(mainState, children);\n    \n    return (    \n      <React.Fragment>\n        {continueSelect} \n      </React.Fragment>\n      \n      );\n  }\n}\n\nclass TasksList extends React.Component{\n  constructor(props){\n    super(props)\n    this.clickTask = this.clickTask.bind(this);\n  }\n  clickTask(e){\n      this.props.setSavedTask(this.props.mainState.tasks[e.target.id].name);\n  }\n  render() {\n    const mainState = this.props.mainState;\n    const clickTask = this.clickTask\n    function createTaskArr(mainState){\n      const taskArr = [];\n      for(let i = 1;i<=mainState.numberOfTasks;i++){\n        if(mainState.tasks[i].name != \"\"){\n          taskArr.push(<div className=\"select\" onClick={clickTask} id={i}>{mainState.tasks[i].name}</div>);\n        } else {\n          break;\n        }\n      }\n      return taskArr;\n    }\n    const tasks = createTaskArr(mainState);\n    return (\n      <React.Fragment>\n        {tasks}\n      </React.Fragment>  \n      );\n  }\n}\n\n\n\n\n\nclass SavedTasks extends React.Component {\n\n  \n  render() {\n   \n    const mainState = this.props.mainState;     \n    const changeSavedTask = this.props.changeSavedTask;\n    const deleteTask = this.props.deleteTask;\n    function createTaskArr(mainState){\n      const taskArr = [];\n      for(let i = 1;i<=mainState.numberOfTasks;i++){\n        if(mainState.tasks[i] != undefined && mainState.tasks[i].name != \"\"){\n          taskArr.push(<SavedTask mainState={mainState} changeSavedTask={changeSavedTask} deleteTask={deleteTask} taskNum={i}/>);\n        } else {\n          break;\n        }\n      }\n      return taskArr;\n    }\n    const savedTasks = createTaskArr(mainState);\n    return (\n    \n      <div className=\"saved_tasks col-xl-4\">\n        {savedTasks}     \n      </div>\n    );\n  }\n}\n\nclass SavedTask extends React.Component {\n\n  render() {\n    function convertMs(object){\n      function msToTime(millis) {\n        let ms = String(Math.floor(millis%1000)).substr(0, 1);\n        let sec = Math.floor(millis / 1000);\n        let hrs = Math.floor(sec / 3600);\n        sec -= hrs * 3600;\n        let min = Math.floor(sec / 60);\n        sec -= min * 60;\n        if (hrs<0){\n        hrs = \"00\";\n        } else if (hrs<10){\n        hrs = \"0\" + hrs;\n        }\n        sec = '' + sec;\n        sec = ('00' + sec).substring(sec.length); \n        min = '' + min;\n        min = ('00' + min).substring(min.length);\n        return hrs + \":\" + min + \":\" + sec + \":\" + ms;\n         \n      }\n      if(object.time!=0 && object.time!=undefined){\n        return {name: object.name, time: msToTime(object.time)};\n      } else { return object;}\n    }\n    const mainState = this.props.mainState;\n    const taskNum = this.props.taskNum\n    const taskData = convertMs(mainState.tasks[taskNum]);\n    const changeSavedTask = this.props.changeSavedTask;  \n    const deleteTask = this.props.deleteTask;\n    function taskExist(taskTime){\n      if(taskTime) \n      return (\n      <React.Fragment>\n        <input type=\"text\" value={taskData.name} onChange={(e)=>changeSavedTask(e, taskNum)} readOnly className=\"saved_task_name\"/>\n        <h4 className=\"saved_task_time\"> {taskData.time}</h4>\n        <button onClick={()=>deleteTask(taskNum)} className=\"delete_button\">Delete</button>\n      </React.Fragment>\n      )\n    }\n    const task = taskExist(taskData.time);\n    return ( \n      <div className=\"saved_task\">     \n        {task}\n      </div>\n    );\n  }\n}\n\n\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}